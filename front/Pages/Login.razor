@page "/login"

@using Services;
@using System.Reflection;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage

@inject UserService service
@inject NavigationManager nav
@inject ProtectedSessionStorage storage

<body>    
    <section class="box-container Form my-4 mx-5">
        <div class="container">
            <div class="row no-gutters">
                <div class="photo-container col-lg-5">
                   <img src="img/curitibandoLogoPreto.png" class="img-fluid" alt=""> 
                </div>
            <div class="col-lg-7 px-5 pt-3"> 
                    
            <div class="form-row">
                <div class="col-lg-7">
                    <input type="text" @bind-value="@email" placeholder="Email"class="form-control my-3 p-2">
                </div>
            </div>
            <div class="form-row">
                <div class="col-lg-7">
                    <input type="password" @bind-value="@password" placeholder="Senha"class="form-control my-3">
                </div>
            </div>
            <div class="form-row">
                <div class="col-lg-7">
                    <button onclick="@UserLogin">
                    Login
                    </button>

                </div>
            </div>
                <a href="#">Esqueci minha senha</a>
                <p>NÃ£o tem uma conta? <a href="/register">Cadastre-se aqui</a></p>
            <div class="checkbox">
                <label>
                    <input type="checkbox"
                    value="Lembre de mim">Lembre de mim
                </label>

            </div>

        </div> 
        </div>
        </div>

    </section>

</body>

@code 
{
    private string password;    
    private string email;
    private string userId;
    private string loginError;

    

    public async void UserLogin()
    {
        var result = await service.Login(
            this.email,
            this.password
        );
        
        if (result == null)
        {
            loginError = "Senha ou login incorreto.";
            StateHasChanged();
            return;
        }

        await storage.SetAsync("logado", true);
        await storage.SetAsync("token", result);
        nav.NavigateTo("/");
    }
}





